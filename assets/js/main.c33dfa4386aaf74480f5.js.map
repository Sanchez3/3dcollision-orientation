{"version":3,"sources":["webpack:///./src/assets/js/main.js","webpack:///./src/assets/js/entities/Game.js"],"names":["[object Object]","this","init","wWidth","window","innerWidth","wHeight","innerHeight","scene","app","three_module","add","camera","renderer","antialias","preserveDrawingBuffer","setSize","document","body","appendChild","domElement","position","set","lookAt","light","normalize","boatContainer","airplaneContainer","physicsWorld","cubeBody","cube","orbitcontrols","OrbitControls","grounds","groundBodys","threeAssets","manager","threecallback","cannon","gravity","groundShape","groundBody2","mass","shape","quaternion","setFromAxisAngle","Math","PI","push","groundBody3","cubeShape","random","quaternion0","copy","ctime","addEventListener","e","getElementById","innerHTML","groundGeometry","i","groundMaterial","color","ground","castShadow","receiveShadow","cubeGeometry","cubeMaterial","onStart","url","itemsLoaded","itemsTotal","onLoad","onProgress","parseInt","onError","load","rs","aspect","updateProjectionMatrix","animate","requestAnimationFrame","update","step","length","render","h5","isPc","userAgentInfo","navigator","userAgent","Agents","Array","flag","v","indexOf","rootResize","wFsize","documentElement","clientWidth","clientHeight","getElementsByTagName","style","fontSize","eventInit","passive","preventDefault","cssInit","that","interval","timeout","end","lastInnerWidth","lastInnerHeight","noChangeCount","clearInterval","clearTimeout","setInterval","setTimeout","onload"],"mappings":"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","file":"assets/js/main.c33dfa4386aaf74480f5.js","sourcesContent":["/**\n * Created by sanchez \n */\n'use strict';\n\n//check the environment\n// if (process.env.NODE_ENV !== 'production') {\n//     console.log('Looks like we are in development mode!');\n// }\n\n// import CSS\n// import animate_css from 'animate.css/animate.min.css';\nimport css from '../css/css.css';\n\n\n// import Js Plugins/Entities\n\n//ES6 Module\nimport Game from './entities/Game';\n\nvar game = new Game();\n\n\nwindow.h5 = {\n    isPc: function() {\n        var userAgentInfo = navigator.userAgent;\n        var Agents = new Array('Android', 'iPhone', 'SymbianOS', 'Windows Phone', 'iPad', 'iPod');\n        var flag = true;\n        for (var v = 0; v < Agents.length; v++) {\n            if (userAgentInfo.indexOf(Agents[v]) > 0) { flag = false; break; }\n        }\n        return flag;\n    },\n    rootResize: function() {\n        var wFsize;\n\n        //iphone6/6s/7/8 orientation=portrait screen.width=750px screen.height=1334px / WeChat window.innerWidth=750px window.innerHeight=1206px \n        var wWidth = document.documentElement.clientWidth || window.innerWidth;\n        var wHeight = document.documentElement.clientHeight || window.innerHeight;\n\n        if (wWidth > wHeight) {\n            wFsize = wHeight / 750 * 100;\n        } else {\n            wFsize = wWidth / 750 * 100;\n        }\n        document.getElementsByTagName('html')[0].style.fontSize = wFsize + 'px';\n    },\n    eventInit: function() {\n        var that = this;\n        document.addEventListener('touchstart', function(e) {}, { passive: false });\n        document.addEventListener('touchmove', function(e) {\n            e.preventDefault();\n        }, { passive: false });\n        return that;\n    },\n    cssInit: function() {\n        var that = this;\n        var noChangeCountToEnd = 100,\n            noEndTimeout = 1000;\n        that.rootResize();\n        window.addEventListener('onorientationchange' in window ? 'orientationchange' : 'resize', function() {\n            var interval,\n                timeout,\n                end,\n                lastInnerWidth,\n                lastInnerHeight,\n                noChangeCount;\n            end = function() {\n                //\"orientationchangeend\"\n                clearInterval(interval);\n                clearTimeout(timeout);\n                interval = null;\n                timeout = null;\n                that.rootResize();\n            };\n            interval = setInterval(function() {\n                if (window.innerWidth === lastInnerWidth && window.innerHeight === lastInnerHeight) {\n                    noChangeCount++;\n                    if (noChangeCount === noChangeCountToEnd) {\n                        //The interval resolved the issue first.\n                        end();\n                    }\n                } else {\n                    lastInnerWidth = window.innerWidth;\n                    lastInnerHeight = window.innerHeight;\n                    noChangeCount = 0;\n                }\n            });\n            timeout = setTimeout(function() {\n                //The timeout happened first.\n                end();\n            }, noEndTimeout);\n        });\n\n        return that;\n    },\n    init: function() {\n        var that = this;\n        that.cssInit().eventInit();\n    }\n};\nwindow.onload = function() {\n    window.h5.init();\n};\n\n//Stats JavaScript Performance Monitor\n\n//import Stats from 'stats.js';\n//showStats();\n// function showStats() {\n//     var stats = new Stats();\n//     stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n//     var fs = document.createElement('div');\n//     fs.style.position = 'absolute';\n//     fs.style.left = 0;\n//     fs.style.top = 0;\n//     fs.style.zIndex = 999;\n//     fs.appendChild(stats.domElement);\n//     document.body.appendChild(fs);\n\n//     function animate() {\n//         stats.begin();\n//         // monitored code goes here\n//         stats.end();\n//         requestAnimationFrame(animate);\n//     }\n//     requestAnimationFrame(animate);\n// }","// import * as PIXI from 'pixi.js'\n// import 'pixi-spine'\nimport TweenMax from 'gsap'\n// import Orienter from './orienter.js'\nimport * as CANNON from 'cannon'\n\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\n\n\nclass Game {\n    constructor() {\n        this.init();\n    }\n    init() {\n        var that = this;\n\n        var wWidth = window.innerWidth;\n        var wHeight = window.innerHeight;\n\n\n        var airplaneMesh, boatMesh;\n        var app = that.app;\n        var scene = new THREE.Scene();\n        // scene.fog = new THREE.Fog(0x000000, 500, 10000);\n        scene.add(new THREE.GridHelper(1000, 100));\n        scene.add(new THREE.AxesHelper(20));\n        var camera = new THREE.PerspectiveCamera(75, wWidth / wHeight, 0.5, 10000);\n\n        var renderer = new THREE.WebGLRenderer({ antialias: true, preserveDrawingBuffer: true })\n        renderer.setSize(wWidth, wHeight);\n        document.body.appendChild(renderer.domElement);\n\n        camera.position.set(-50, 50, 50);\n        camera.lookAt(scene.position);\n        // scene.add(camera);\n        scene.add(camera);\n\n        scene.add(new THREE.AmbientLight(0xffffff, 0.5));\n        var light = new THREE.DirectionalLight(0xffffff, 0.35);\n        light.position.set(1, 1, 1).normalize();\n\n        scene.add(light);\n\n\n        var boatContainer = new THREE.Object3D();\n        var airplaneContainer = new THREE.Object3D();\n        var objCopy = new THREE.Object3D();\n        scene.add(airplaneContainer, boatContainer);\n        var orbitcontrols = new OrbitControls(camera, renderer.domElement)\n        // controls.enableDamping = true\n        // controls.dampingFactor = 0.25\n        // controls.enableZoom = false\n\n        var controls, physicsWorld;\n        var cubeBody;\n        var cube;\n        var grounds = [];\n        var groundBodys = [];\n\n        // var light = new THREE.AmbientLight(0xffffff); // Soft white light\n        // scene.add(light);\n\n        // var slight = new THREE.SpotLight(0xffffff);\n        // slight.position.set(30, 30, 40);\n        // slight.target.position.set(0, 0, 0);\n        // slight.castShadow = true;\n\n        var threeAssets = [];\n        var manager = new THREE.LoadingManager();\n        manager.onStart = function(url, itemsLoaded, itemsTotal) {\n            // console.log('Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\n        };\n\n        manager.onLoad = function() {\n            console.log('Loading complete!');\n            threecallback && threecallback();\n        };\n\n        manager.onProgress = function(url, itemsLoaded, itemsTotal) {\n            // console.log('Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\n            var per = parseInt(itemsLoaded / itemsTotal * 100);\n            console.log(per)\n            // $(\"#percentage\").html(per + ' %');\n        };\n\n        manager.onError = function(url) {\n            console.log('There was an error loading ' + url);\n        };\n\n        function threecallback() {\n            // var texture = threeAssets['color'];\n\n            // var boatGeo = threeAssets['boat'];\n            physicsWorld = new CANNON.World()\n            physicsWorld.gravity.set(0, -10, 0);\n\n            function renderTxt(x, y, z) {\n                var p = document.getElementsByTagName('span');\n                p[0].innerHTML = x;\n                p[1].innerHTML = y;\n                p[2].innerHTML = z;\n            }\n            // window.addEventListener(\"devicemotion\", function(event) {\n            //     // 处理event.alpha、event.beta及event.gamma\n            //     renderTxt(event.accelerationIncludingGravity.x, event.accelerationIncludingGravity.y, event.accelerationIncludingGravity.z)\n            //     physicsWorld.gravity.set(event.accelerationIncludingGravity.x, event.accelerationIncludingGravity.y, event.accelerationIncludingGravity.z);\n            // }, true);\n\n            // function onClick() {\n            //     alert(1)\n            //     if (typeof DeviceMotionEvent.requestPermission === 'function') {\n            //         DeviceMotionEvent.requestPermission()\n            //             .then(permissionState => {\n            //                 if (permissionState === 'granted') {\n            //                     window.addEventListener(\"devicemotion\", function(event) {\n            //                         // 处理event.alpha、event.beta及event.gamma\n            //                         renderTxt(event.accelerationIncludingGravity.x, event.accelerationIncludingGravity.y, event.accelerationIncludingGravity.z)\n            //                         physicsWorld.gravity.set(event.accelerationIncludingGravity.x, event.accelerationIncludingGravity.y, event.accelerationIncludingGravity.z);\n            //                     }, true);\n            //                 }\n            //             })\n            //             .catch(console.error);\n            //     } else {\n            //         // handle regular non iOS 13+ devices\n            //     }\n            // }\n\n            // document.getElementById('text').addEventListener('click', onClick.bind(this));\n\n\n\n            var groundShape = new CANNON.Plane()\n            // var groundBody0 = new CANNON.Body({\n            //     mass: 0,\n            //     shape: groundShape\n            // })\n            // groundBody0.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2)\n            // groundBody0.position.set(0, -25, 0)\n            // groundBodys.push(groundBody0)\n            // physicsWorld.add(groundBody0)\n\n            // var groundBody1 = new CANNON.Body({\n            //     mass: 0,\n            //     shape: groundShape\n            // })\n            // groundBody1.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2)\n            // groundBody1.position.set(0, 0, 0)\n            // groundBodys.push(groundBody1)\n            // physicsWorld.add(groundBody1)\n\n            var groundBody2 = new CANNON.Body({\n                mass: 0,\n                shape: groundShape\n            })\n            groundBody2.quaternion.setFromAxisAngle(new CANNON.Vec3(0, 1, 0), -Math.PI / 2)\n            groundBody2.position.set(25, 0, 0)\n            groundBodys.push(groundBody2)\n            physicsWorld.add(groundBody2)\n\n            var groundBody3 = new CANNON.Body({\n                mass: 0,\n                shape: groundShape\n            })\n            groundBody3.position.set(-25, 0, 0)\n            groundBody3.quaternion.setFromAxisAngle(new CANNON.Vec3(0, 1, 0), -Math.PI / 2)\n            groundBodys.push(groundBody3)\n            physicsWorld.add(groundBody3)\n\n            // var groundBody4 = new CANNON.Body({\n            //     mass: 0,\n            //     shape: groundShape\n            // })\n            // // groundBody4.quaternion.setFromAxisAngle(new CANNON.Vec3(0, 0, 1), -Math.PI / 2)\n            // groundBody4.position.set(0, 0, -25)\n            // groundBodys.push(groundBody4)\n            // physicsWorld.add(groundBody4)\n\n            // var groundBody5 = new CANNON.Body({\n            //     mass: 0,\n            //     shape: groundShape\n            // })\n            // groundBody5.position.set(0, 0, 25)\n            // groundBodys.push(groundBody5)\n            // physicsWorld.add(groundBody5)\n\n            var cubeShape = new CANNON.Box(new CANNON.Vec3(0.5, 0.5, 0.5));\n            cubeBody = new CANNON.Body({\n                mass: 5,\n                position: new CANNON.Vec3(0, 5, 0),\n                shape: cubeShape\n            })\n            cubeBody.position.set(Math.random() - 0.5, 2.5 * 1 + 5.5, Math.random() - 0.5);\n            var quaternion0 = new THREE.Quaternion();\n            // quaternion0.setFromAxisAngle(new THREE.Vector3(1, 1, 0), Math.PI / 2);\n            cubeBody.quaternion.copy(quaternion0)\n            physicsWorld.add(cubeBody)\n\n            var ctime = 0;\n            cubeBody.addEventListener(\"collide\", function(e) {\n                console.log(\"The sphere just collided with the ground!\");\n                console.log(\"Collided with body:\", e.body);\n                console.log(\"Contact between bodies:\", e.contact);\n                ctime++;\n                document.getElementById('ctimes').innerHTML = ctime;\n            });\n\n            // 平面网格\n            var groundGeometry = new THREE.PlaneGeometry(50, 50, 1, 1);\n            // var groundMaterial = new THREE.MeshLambertMaterial({ color: Math.random() * 0xffffff });\n\n            for (let i = 0; i < 2; i++) {\n                var groundMaterial = new THREE.MeshLambertMaterial({ color: Math.random() * 0xffffff });\n                var ground = new THREE.Mesh(groundGeometry, groundMaterial)\n                ground.castShadow = true;\n                ground.receiveShadow = true;\n                grounds.push(ground)\n                scene.add(ground)\n            }\n\n            var cubeGeometry = new THREE.BoxGeometry(1, 1, 1, 10, 10);\n            var cubeMaterial = new THREE.MeshLambertMaterial({ color: Math.random() * 0xffffff });\n            cube = new THREE.Mesh(cubeGeometry, cubeMaterial);\n            cube.castShadow = true;\n            scene.add(cube);\n        }\n\n        var textureLoader = new THREE.TextureLoader(manager);\n        textureLoader.load('/assets/favicon.ico', function(rs) {\n            threeAssets['color'] = rs;\n        });\n\n\n        window.addEventListener('resize', onWindowResize, false);\n\n        function onWindowResize() {\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(window.innerWidth, window.innerHeight);\n        }\n        var lasetE;\n\n        var animate = function() {\n            requestAnimationFrame(animate);\n            if (orbitcontrols) {\n                orbitcontrols.update();\n            }\n            if (physicsWorld) {\n                physicsWorld.step(1 / 60)\n            }\n            if (grounds.length) {\n                cube.position.copy(cubeBody.position)\n                cube.quaternion.copy(cubeBody.quaternion)\n                for (let i = 0; i < groundBodys.length; i++) {\n                    // console.log(i)\n                    grounds[i].position.copy(groundBodys[i].position);\n                    grounds[i].quaternion.copy(groundBodys[i].quaternion);\n                }\n\n            }\n            renderer.render(scene, camera);\n        };\n        animate();\n\n    }\n    create() {\n        var that = this;\n    }\n}\n\n\nexport default Game;"],"sourceRoot":""}