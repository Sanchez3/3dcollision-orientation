{"version":3,"sources":["webpack:///./src/assets/js/main.js","webpack:///./src/assets/js/entities/Game.js"],"names":["[object Object]","this","init","wWidth","window","innerWidth","wHeight","innerHeight","scene","app","three_module","fog","add","camera","renderer","antialias","preserveDrawingBuffer","setSize","document","body","appendChild","domElement","position","set","lookAt","light","castShadow","boatContainer","airplaneContainer","physicsWorld","ground","groundBody","orbitcontrols","OrbitControls","sphereBodys","cubeBodys","spheres","cubes","slight","target","threeAssets","manager","threecallback","renderTxt","x","y","z","p","getElementsByTagName","innerHTML","cannon","gravity","addEventListener","event","accelerationIncludingGravity","getElementById","alert","DeviceMotionEvent","requestPermission","then","permissionState","catch","console","error","bind","sphereShape","i","sphereBody","mass","shape","Math","random","push","cubeShape","cubeBody","groundShape","quaternion","setFromAxisAngle","PI","groundGeometry","groundMaterial","color","receiveShadow","sphereGeometry","sphereMaterial","sphereMesh","cubeGeometry","cubeMesh","onStart","url","itemsLoaded","itemsTotal","onLoad","onProgress","parseInt","onError","load","rs","aspect","updateProjectionMatrix","animate","requestAnimationFrame","update","step","length","copy","k","render","h5","isPc","userAgentInfo","navigator","userAgent","Agents","Array","flag","v","indexOf","rootResize","wFsize","documentElement","clientWidth","clientHeight","style","fontSize","eventInit","e","passive","preventDefault","cssInit","that","interval","timeout","end","lastInnerWidth","lastInnerHeight","noChangeCount","clearInterval","clearTimeout","setInterval","setTimeout","onload"],"mappings":"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","file":"assets/js/main.2899ac0a5d6962f739d2.js","sourcesContent":["/**\n * Created by sanchez \n */\n'use strict';\n\n//check the environment\n// if (process.env.NODE_ENV !== 'production') {\n//     console.log('Looks like we are in development mode!');\n// }\n\n// import CSS\n// import animate_css from 'animate.css/animate.min.css';\nimport css from '../css/css.css';\n\n\n// import Js Plugins/Entities\n\n//ES6 Module\nimport Game from './entities/Game';\n\nvar game = new Game();\n\n\nwindow.h5 = {\n    isPc: function() {\n        var userAgentInfo = navigator.userAgent;\n        var Agents = new Array('Android', 'iPhone', 'SymbianOS', 'Windows Phone', 'iPad', 'iPod');\n        var flag = true;\n        for (var v = 0; v < Agents.length; v++) {\n            if (userAgentInfo.indexOf(Agents[v]) > 0) { flag = false; break; }\n        }\n        return flag;\n    },\n    rootResize: function() {\n        var wFsize;\n\n        //iphone6/6s/7/8 orientation=portrait screen.width=750px screen.height=1334px / WeChat window.innerWidth=750px window.innerHeight=1206px \n        var wWidth = document.documentElement.clientWidth || window.innerWidth;\n        var wHeight = document.documentElement.clientHeight || window.innerHeight;\n\n        if (wWidth > wHeight) {\n            wFsize = wHeight / 750 * 100;\n        } else {\n            wFsize = wWidth / 750 * 100;\n        }\n        document.getElementsByTagName('html')[0].style.fontSize = wFsize + 'px';\n    },\n    eventInit: function() {\n        var that = this;\n        document.addEventListener('touchstart', function(e) {}, { passive: false });\n        document.addEventListener('touchmove', function(e) {\n            e.preventDefault();\n        }, { passive: false });\n        return that;\n    },\n    cssInit: function() {\n        var that = this;\n        var noChangeCountToEnd = 100,\n            noEndTimeout = 1000;\n        that.rootResize();\n        window.addEventListener('onorientationchange' in window ? 'orientationchange' : 'resize', function() {\n            var interval,\n                timeout,\n                end,\n                lastInnerWidth,\n                lastInnerHeight,\n                noChangeCount;\n            end = function() {\n                //\"orientationchangeend\"\n                clearInterval(interval);\n                clearTimeout(timeout);\n                interval = null;\n                timeout = null;\n                that.rootResize();\n            };\n            interval = setInterval(function() {\n                if (window.innerWidth === lastInnerWidth && window.innerHeight === lastInnerHeight) {\n                    noChangeCount++;\n                    if (noChangeCount === noChangeCountToEnd) {\n                        //The interval resolved the issue first.\n                        end();\n                    }\n                } else {\n                    lastInnerWidth = window.innerWidth;\n                    lastInnerHeight = window.innerHeight;\n                    noChangeCount = 0;\n                }\n            });\n            timeout = setTimeout(function() {\n                //The timeout happened first.\n                end();\n            }, noEndTimeout);\n        });\n\n        return that;\n    },\n    init: function() {\n        var that = this;\n        that.cssInit().eventInit();\n    }\n};\nwindow.onload = function() {\n    window.h5.init();\n};\n\n//Stats JavaScript Performance Monitor\n\n//import Stats from 'stats.js';\n//showStats();\n// function showStats() {\n//     var stats = new Stats();\n//     stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n//     var fs = document.createElement('div');\n//     fs.style.position = 'absolute';\n//     fs.style.left = 0;\n//     fs.style.top = 0;\n//     fs.style.zIndex = 999;\n//     fs.appendChild(stats.domElement);\n//     document.body.appendChild(fs);\n\n//     function animate() {\n//         stats.begin();\n//         // monitored code goes here\n//         stats.end();\n//         requestAnimationFrame(animate);\n//     }\n//     requestAnimationFrame(animate);\n// }","// import * as PIXI from 'pixi.js'\n// import 'pixi-spine'\nimport TweenMax from 'gsap'\n// import Orienter from './orienter.js'\nimport * as CANNON from 'cannon'\n\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\n\n\nclass Game {\n    constructor() {\n        this.init();\n    }\n    init() {\n        var that = this;\n\n        var wWidth = window.innerWidth;\n        var wHeight = window.innerHeight;\n\n\n        var airplaneMesh, boatMesh;\n        var app = that.app;\n        var scene = new THREE.Scene();\n        scene.fog = new THREE.Fog(0x000000, 500, 10000);\n        scene.add(new THREE.GridHelper(1000, 100));\n        scene.add(new THREE.AxesHelper(20));\n        var camera = new THREE.PerspectiveCamera(75, wWidth / wHeight, 0.5, 10000);\n\n        var renderer = new THREE.WebGLRenderer({ antialias: true, preserveDrawingBuffer: true })\n        renderer.setSize(wWidth, wHeight);\n        document.body.appendChild(renderer.domElement);\n\n        camera.position.set(0, 30, 20);\n        camera.lookAt(scene.position);\n        // scene.add(camera);\n        scene.add(camera);\n        scene.add(new THREE.AmbientLight(0x666666));\n        var light = new THREE.DirectionalLight(0xffffff, 1.75);\n        light.castShadow = true;\n        var d = 20;\n        light.position.set(d, d, d);\n\n        scene.add(light);\n\n\n        var boatContainer = new THREE.Object3D();\n        var airplaneContainer = new THREE.Object3D();\n        var objCopy = new THREE.Object3D();\n        scene.add(airplaneContainer, boatContainer);\n        var orbitcontrols = new OrbitControls(camera, renderer.domElement)\n        // controls.enableDamping = true\n        // controls.dampingFactor = 0.25\n        // controls.enableZoom = false\n\n        var controls, physicsWorld;\n        var sphereBodys = [];\n        var cubeBodys = [];\n        var spheres = [];\n        var cubes = [];\n        var ground;\n        var groundBody;\n\n        var light = new THREE.AmbientLight(0xffffff); // Soft white light\n        scene.add(light);\n\n        var slight = new THREE.SpotLight(0xffffff);\n        slight.position.set(30, 30, 40);\n        slight.target.position.set(0, 0, 0);\n        slight.castShadow = true;\n\n        var threeAssets = [];\n        var manager = new THREE.LoadingManager();\n        manager.onStart = function(url, itemsLoaded, itemsTotal) {\n            // console.log('Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\n        };\n\n        manager.onLoad = function() {\n            console.log('Loading complete!');\n            threecallback && threecallback();\n        };\n\n        manager.onProgress = function(url, itemsLoaded, itemsTotal) {\n            // console.log('Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\n            var per = parseInt(itemsLoaded / itemsTotal * 100);\n            console.log(per)\n            // $(\"#percentage\").html(per + ' %');\n        };\n\n        manager.onError = function(url) {\n            console.log('There was an error loading ' + url);\n        };\n\n        function threecallback() {\n            // var texture = threeAssets['color'];\n\n            // var boatGeo = threeAssets['boat'];\n            physicsWorld = new CANNON.World()\n            physicsWorld.gravity.set(0, -10, 0);\n\n            function renderTxt(x, y, z) {\n                var p = document.getElementsByTagName('span');\n                p[0].innerHTML = x;\n                p[1].innerHTML = y;\n                p[2].innerHTML = z;\n            }\n            window.addEventListener(\"devicemotion\", function(event) {\n                // 处理event.alpha、event.beta及event.gamma\n                renderTxt(event.accelerationIncludingGravity.x, event.accelerationIncludingGravity.y, event.accelerationIncludingGravity.z)\n                physicsWorld.gravity.set(event.accelerationIncludingGravity.x, event.accelerationIncludingGravity.y, event.accelerationIncludingGravity.z);\n            }, true);\n\n            function onClick() {\n                alert(1)\n                if (typeof DeviceMotionEvent.requestPermission === 'function') {\n                    DeviceMotionEvent.requestPermission()\n                        .then(permissionState => {\n                            if (permissionState === 'granted') {\n                                window.addEventListener(\"devicemotion\", function(event) {\n                                    // 处理event.alpha、event.beta及event.gamma\n                                    renderTxt(event.accelerationIncludingGravity.x, event.accelerationIncludingGravity.y, event.accelerationIncludingGravity.z)\n                                    physicsWorld.gravity.set(event.accelerationIncludingGravity.x, event.accelerationIncludingGravity.y, event.accelerationIncludingGravity.z);\n                                }, true);\n                            }\n                        })\n                        .catch(console.error);\n                } else {\n                    // handle regular non iOS 13+ devices\n                }\n            }\n\n            document.getElementById('text').addEventListener('click', onClick.bind(this));\n\n\n\n\n            var sphereShape = new CANNON.Sphere(1)\n            for (var i = 9; i >= 0; i--) {\n                var sphereBody = new CANNON.Body({\n                    mass: 5,\n                    position: new CANNON.Vec3(0, 10, 0),\n                    shape: sphereShape\n                })\n                sphereBody.position.set(Math.random() - 0.5, 2.5 * i + 0.5, Math.random() - 0.5);\n                physicsWorld.add(sphereBody)\n                sphereBodys.push(sphereBody);\n            }\n\n            var cubeShape = new CANNON.Box(new CANNON.Vec3(0.5, 0.5, 0.5));\n            for (var i = 9; i >= 0; i--) {\n                var cubeBody = new CANNON.Body({\n                    mass: 5,\n                    position: new CANNON.Vec3(0, 10, 0),\n                    shape: cubeShape\n                })\n                cubeBody.position.set(Math.random() - 0.5, 2.5 * i + 5.5, Math.random() - 0.5);\n                physicsWorld.add(cubeBody)\n                cubeBodys.push(cubeBody);\n            }\n\n\n            var groundShape = new CANNON.Plane()\n            groundBody = new CANNON.Body({\n                mass: 0,\n                shape: groundShape\n            })\n            // setFromAxisAngle 旋转 X 轴 -90 度\n            groundBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2)\n            physicsWorld.add(groundBody)\n\n            // 平面网格\n            var groundGeometry = new THREE.PlaneGeometry(100, 100, 1, 1);\n            var groundMaterial = new THREE.MeshLambertMaterial({ color: 0x777777 });\n            ground = new THREE.Mesh(groundGeometry, groundMaterial)\n            // ground.rotation.set(-Math.PI / 2, 0, 0)\n            ground.castShadow = true;\n            ground.receiveShadow = true;\n            scene.add(ground)\n            // 球网格\n            var sphereGeometry = new THREE.SphereGeometry(1, 32, 32)\n            var sphereMaterial = new THREE.MeshStandardMaterial({ color: 0x888888 })\n            for (var i = 10 - 1; i >= 0; i--) {\n                var sphereMesh = new THREE.Mesh(sphereGeometry, sphereMaterial);\n                sphereMesh.castShadow = true;\n                spheres.push(sphereMesh);\n                scene.add(sphereMesh);\n            }\n\n\n            var cubeGeometry = new THREE.BoxGeometry(1, 1, 1, 10, 10);\n            var cubeMaterial = new THREE.MeshPhongMaterial({ color: 0x888888 });\n            for (var i = 10 - 1; i >= 0; i--) {\n                var cubeMesh = new THREE.Mesh(cubeGeometry, sphereMaterial);\n                cubeMesh.castShadow = true;\n                cubes.push(cubeMesh);\n                scene.add(cubeMesh);\n            }\n        }\n\n        var textureLoader = new THREE.TextureLoader(manager);\n        textureLoader.load('/assets/favicon.ico', function(rs) {\n            threeAssets['color'] = rs;\n        });\n\n\n\n\n\n\n        window.addEventListener('resize', onWindowResize, false);\n\n        function onWindowResize() {\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(window.innerWidth, window.innerHeight);\n        }\n        var lasetE;\n\n        var animate = function() {\n            requestAnimationFrame(animate);\n            if (orbitcontrols) {\n                orbitcontrols.update();\n            }\n            if (physicsWorld) {\n                physicsWorld.step(1 / 60)\n            }\n            if (spheres.length) {\n                ground.position.copy(groundBody.position);\n                ground.quaternion.copy(groundBody.quaternion);\n                for (var i = 9; i >= 0; i--) {\n                    (function(k) {\n                        spheres[k].position.copy(sphereBodys[k].position)\n                        spheres[k].quaternion.copy(sphereBodys[k].quaternion)\n                        cubes[k].position.copy(cubeBodys[k].position)\n                        cubes[k].quaternion.copy(cubeBodys[k].quaternion)\n                    })(i)\n                }\n            }\n            renderer.render(scene, camera);\n        };\n        animate();\n\n        //Web Work\n        // // Parameters\n        // var dt = 1/60, N=40;\n\n        // // Data arrays. Contains all our kinematic data we need for rendering.\n        // var positions = new Float32Array(N*3);\n        // var quaternions = new Float32Array(N*4);\n\n        // // Create a blob for the inline worker code\n        // var blob = new Blob([document.querySelector('#worker1').textContent],{type:'text/javascript'});\n\n        // // Create worker\n        // var worker = new Worker(window.URL.createObjectURL(blob));\n        // worker.postMessage = worker.webkitPostMessage || worker.postMessage;\n\n        // var sendTime; // Time when we sent last message\n        // worker.onmessage = function(e) {\n\n        //     // Get fresh data from the worker\n        //     positions = e.data.positions;\n        //     quaternions = e.data.quaternions;\n\n        //     // Update rendering spheres\n        //     for(var i=0; i!==spheres.length; i++){\n        //         spheres[i].position.set( positions[3*i+0],\n        //                                 positions[3*i+1],\n        //                                 positions[3*i+2] );\n        //         spheres[i].quaternion.set(quaternions[4*i+0],\n        //                                  quaternions[4*i+1],\n        //                                  quaternions[4*i+2],\n        //                                  quaternions[4*i+3]);\n        //     }\n\n        //     // If the worker was faster than the time step (dt seconds), we want to delay the next timestep\n        //     var delay = dt * 1000 - (Date.now()-sendTime);\n        //     if(delay < 0){\n        //         delay = 0;\n        //     }\n        //     setTimeout(sendDataToWorker,delay);\n        // }\n\n        // function sendDataToWorker(){\n        //     sendTime = Date.now();\n        //     worker.postMessage({\n        //         N : N,\n        //         dt : dt,\n        //         cannonUrl : document.location.href.replace(/\\/[^/]*$/,\"/\") + \"../build/cannon.js\",\n        //         positions : positions,\n        //         quaternions : quaternions\n        //     },[positions.buffer, quaternions.buffer]);\n        // }\n        // sendDataToWorker();\n\n    }\n    create() {\n        var that = this;\n    }\n}\n\n\nexport default Game;"],"sourceRoot":""}